// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . 2 . . . . 2 . . . . 2 
2 . . . . 2 . . . . 2 . . . . 2 
2 2 2 . . 2 . . 2 2 2 . . 2 2 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . 2 2 . . 2 2 
2 2 2 2 2 2 2 2 . . . . . . . 2 
2 . . 2 . . . . . . . . . . . 2 
2 . . 2 . . . . . 2 2 2 2 2 2 2 
2 . . 2 . . . . . . 2 . . . . 2 
2 . . . . . . . . . 2 . . . . 2 
2 . . . . . . . . . . . . 2 2 2 
2 2 2 2 2 2 . . 2 . . . . . . 2 
2 . . . . . . . 2 . . 2 . . . 2 
2 . . . . . . . 2 . . 2 . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight1,sprites.dungeon.collectibleInsignia,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.chestClosed], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`1000100001030303030303030303030303030302040e000000000000000b0d0000000c080500000000000000000b000000000008050b0b0b0b0b0b00000b00000b0b0b08050d000b000e0b00000b00000b000e080500000b00000b000000000000000008050000000000000000000000000000080500000000000000000b0b0b0b0b0b08050b0b0b0b0b0b00000000000b0d0008050e000000000000000000000b0000080500000000000000000000000b000008050b00000b0b0b0b0b0b00000b000008050000000b000000000b00000b000008050000000b0000000000000000000008050a00000b0d0000000000000000000806090909090909090909090909090907`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . 2 . . . . . 2 
2 . . . . . . . . 2 . . . . . 2 
2 2 2 2 2 2 2 . . 2 . . 2 2 2 2 
2 . . 2 . . 2 . . 2 . . 2 . . 2 
2 . . 2 . . 2 . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . . . . 2 . . 2 
2 . . . . . . . . . . . 2 . . 2 
2 . . . . . . . . . . . 2 . . 2 
2 2 . . 2 2 2 2 2 2 . . 2 . . 2 
2 . . . 2 . . . . 2 . . 2 . . 2 
2 . . . 2 . . . . . . . . . . 2 
2 . . . 2 . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.forestTiles1,sprites.builtin.forestTiles3,sprites.builtin.forestTiles2,sprites.builtin.forestTiles5,sprites.builtin.forestTiles9,sprites.builtin.forestTiles13,sprites.builtin.forestTiles15,sprites.builtin.forestTiles11,sprites.builtin.forestTiles24,sprites.dungeon.collectibleInsignia,sprites.dungeon.floorDark1,sprites.dungeon.chestClosed,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.collectibleBlueCrystal], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`1000100001120202030303120303020202021204110f0000000b000e000b00000000100907000000000b0000000b00000000000907000000000000000000000b0b0b0b09070b0b0b0000000000000000000000091110000000000a0a00000a0a000000090700000000000a000000000a000000090700000000000a000000000a00000e13070b0b0b00000a00000c000a000000090700000000000a0a0a0d0a0a000000090700000000000b000000000b0000000911100000000000000000000000000009070b0b0b0b00000b0b0b0b00000b0b09070000000000000b0000000000000009110e00000000000b1000000000000e1306140808080808081408080808081405`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . 2 . . . 2 . . . . . 2 
2 . . . . 2 . . . 2 . . . . . 2 
2 . . . . . . . . . . 2 2 2 2 2 
2 2 2 2 . . . . . . . . . . . 2 
2 . . . . . 2 2 . . 2 2 . . . 2 
2 . . . . . 2 . . . . 2 . . . 2 
2 . . . . . 2 . . . . 2 . . . 2 
2 2 2 2 . . 2 . . . . 2 . . . 2 
2 . . . . . 2 2 2 2 2 2 . . . 2 
2 . . . . . 2 . . . . 2 . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 . . 2 2 2 2 . . 2 2 2 
2 . . . . . . 2 . . . . . . . 2 
2 . . . . . . 2 . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterNorth1,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterSouth1,sprites.dungeon.greenOuterEast0,sprites.dungeon.floorDarkDiamond,sprites.dungeon.floorDark4,sprites.dungeon.stairLadder,sprites.dungeon.purpleOuterSouth2,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.collectibleInsignia,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.greenOuterWest2,sprites.dungeon.greenOuterNorth2,sprites.dungeon.greenOuterEast2,sprites.dungeon.greenOuterSouth2], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
